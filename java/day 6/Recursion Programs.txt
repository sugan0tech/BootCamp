================================================================
package recursionsamples;

class Sample{
    
    void test1(){
        System.out.println("  Test1 Method ");
    }
    
    void test2(){
        test1();
        System.out.println("       Test2 Method ");
    }

    void test3(){
        test2();
        System.out.println("          Test3 Method ");
    }    
    
}
public class Demo {
    
    public static void main(String[] args) {
        
        Sample s1 = new Sample();
        s1.test3();
        
        System.out.println(" \n\n End of main method");
    }
}

================================================================
package recursionsamples;

public class RecursionSample1 {
    
    void test(int count){
        
        if(count==5){
            return;
        }
        System.out.println(" Before Test Method -------> "+count);
        
        test(count-1);
        
        System.out.println("                  After Test Method -------> "+count);
        
    }
    
    public static void main(String[] args) {
        
        new RecursionSample1().test(10);
    }
}

================================================================
package recursionsamples;
class RecursionSample2{
    int s=0;
    void check(int x,int s){
        s++;

        if(x==1)
            return;
        
        System.out.println("  Before Check  "+x+"  "+s);
        check(x-1,s);
        System.out.println("                  After Check  "+x+"  "+s);
    }
    public static void main(String[] args) {
        
        new RecursionSample2().check(10,0);
    }
}
================================================================
package recursionsamples;
public class RecursionSample4 {
    
    int test(int count){
        
        if(count==6){
            return 1;
        }
        //System.out.println(" Before Test Method -------> "+count);
        return 5 * test(count-1);
    }
    
    public static void main(String[] args) {
        
        int result = new RecursionSample4().test(10);
        
        System.out.println("  Result : "+result);
    }
}

================================================================
package recursionsamples;
public class RecursionSample5 {
    
    int test(int count){
        //System.out.println("  Fuction Called ");
        if(count==7){
            return 2;
        }

        int left = test(count-1);        
        int right = test(count-1);

        
        return left*right;
    }
    
    public static void main(String[] args) {
        
        int result = new RecursionSample5().test(10);
        
        System.out.println("  Result : "+result);
    }
}

================================================================
package recursionsamples;
public class RecursionSample6 {
    
    int test(int count){
        //System.out.println("  Fuction Called ");
        if(count==7){
            return 2;
        }

        int left = test(count-1);        
        int center = test(count-1);    
        int right = test(count-1);

        
        return left*right;
    }
    
    public static void main(String[] args) {
        
        int result = new RecursionSample5().test(10);
        
        System.out.println("  Result : "+result);
    }
}

================================================================
package recursionsamples;
public class RecursionSample7 {
    static int fact(int n){        
        if(n==1)
            return 1;
        else{
            System.out.println("   N : "+n);
            return n * fact(n-1);
        }            
    }
    public static void main(String[] args) {        
        System.out.println("   Factorial : "+fact(6));
    }
    
    
}

================================================================


package recursionsamples;

class Node{
    int data;
    Node next;

    Node(int data) {
        this.data = data;
    }
    
    
}
public class Test {
    
    Node start = null;
    void create(){
        
        start = new Node(10);
        start.next = new Node(20);
        start.next.next = new Node(30);
        start.next.next.next = new Node(40);
        start.next.next.next.next = new Node(50);
        
        
        
        while (start!=null) {            
            System.out.println("  ---> "+start.data);
            
            start = start.next;
        }
        
        
    }
    
    public static void main(String[] args) {
        
        
        new Test().create();
    }
    
}

